local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Network = ReplicatedStorage:WaitForChild("Network")
local Library = ReplicatedStorage.Library
local PlotCmds = require(Library.Client.PlotCmds.ClientPlot)
local Items = require(Library.Items.Types)
local HalloweenWorld = require(Library.Types.HalloweenWorld)
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Plots = workspace.__THINGS.Plots
local LocalPlot = PlotCmds.GetLocal()
local Save = require(Library.Client.Save).Get()

local KeepCoins = false

local Upgrades = {
    "HalloweenCandyMultiplier",
    "HalloweenEggLuck",
    "HalloweenTrickOrTreatLuck",
    "HalloweenMoreDiamonds",
    "HalloweenMoreWitchHats",
    "HalloweenHugeLuck",
    "HalloweenTitanicLuck"
}

local EggsTiersAutobuy = {
    House1 = false,
    House2 = false,
    House3 = false,
    House4 = false,
    House5 = false
}
local Coins = 0

local function GetCurrentCoins()
    if Save.Inventory and Save.Inventory.Currency then
        for _, currencyData in pairs(Save.Inventory.Currency) do
            if string.find(currencyData.id, "HalloweenCoins") then
                Coins = currencyData._am or 0
                return Coins
            end
        end
    end
    return 0
end

local function CollectCoins()
    while true do
        for i = 1, 10 do
            local args = { i }
            Network:WaitForChild('HalloweenWorld_Claim'):InvokeServer(unpack(args))
            wait(1)
        end
    end
end

local function Buy1EggX1()
    local args = {
        [1] = LocalPlot:GetId(),
        [2] = 'PurchaseEgg',
        [3] = 1,
        [4] = 1,
    }
    Network:WaitForChild('Plots_Invoke'):InvokeServer(unpack(args))
end

local function Buy2EggX1()
    local args = {
        [1] = LocalPlot:GetId(),
        [2] = 'PurchaseEgg',
        [3] = 2,
        [4] = 1,
    }
    Network:WaitForChild('Plots_Invoke'):InvokeServer(unpack(args))
end

local function Buy3EggX1()
    local args = {
        [1] = LocalPlot:GetId(),
        [2] = 'PurchaseEgg',
        [3] = 3,
        [4] = 1,
    }
    Network:WaitForChild('Plots_Invoke'):InvokeServer(unpack(args))
end

local function Buy4EggX1()
    local args = {
        [1] = LocalPlot:GetId(),
        [2] = 'PurchaseEgg',
        [3] = 4,
        [4] = 1,
    }
    Network:WaitForChild('Plots_Invoke'):InvokeServer(unpack(args))
end

local function Buy5EggX1()
    local args = {
        [1] = LocalPlot:GetId(),
        [2] = 'PurchaseEgg',
        [3] = 5,
        [4] = 1,
    }
    Network:WaitForChild('Plots_Invoke'):InvokeServer(unpack(args))
end

local function GetTotalPetsIncome()
    if not LocalPlot then
        print(":x: Участок не найден")
        return 0
    end
    
    local totalIncome = 0
    for i = 1, 10 do
        local pillarData = LocalPlot:Save("Pillar_" .. i)
        if pillarData and pillarData.Class == "HPillar" then
            local success, pet = pcall(function()
                return Items.From("HPillar", pillarData.Data)
            end)
            if success and pet then
                local income = HalloweenWorld.ComputePayout(LocalPlayer, pet, 1)
                totalIncome = totalIncome + income
            end
        end
    end
    
    return totalIncome
end

local function GetHouseStatusTable()
    local localPlot = PlotCmds.GetLocal()
    local houseStatusTable = {}
    
    if localPlot and localPlot:GetDirectory()._id == "HalloweenWorld" then
        local unlockedHouses = localPlot:Save("HouseUnlocked") or 1
        
        for i = 1, 5 do
            local isUnlocked = i <= unlockedHouses
            houseStatusTable[i] = {
                HouseNumber = i,
                IsUnlocked = isUnlocked,
                Status = isUnlocked and "UNLOCKED" or "LOCKED"
            }
        end
        
        return houseStatusTable
    else
        return {}
    end
end

local function GetLastUnlockedHouseNumber()
    local houseStatusTable = GetHouseStatusTable()
    
    for i = 5, 1, -1 do
        if houseStatusTable[i] and houseStatusTable[i].IsUnlocked then
            return i
        end
    end
    
    return 0
end

local lastHouseNumber = GetLastUnlockedHouseNumber()
local houses = GetHouseStatusTable()
local totalCPS = GetTotalPetsIncome()

local function BuyEggsConstantlyToggle()
    local totalCPS = GetTotalPetsIncome()

    if totalCPS >= 3000000 and EggsTiersAutobuy.House5 == false and KeepCoins == false then
        EggsTiersAutobuy.House5 = true
        task.spawn(function()
            Buy1EggX1()
        end)
    elseif totalCPS >= 500000 and EggsTiersAutobuy.House4 == false and KeepCoins == false then
        EggsTiersAutobuy.House4 = true
        task.spawn(function()
            Buy2EggX1()
        end)
    elseif totalCPS >= 80000 and EggsTiersAutobuy.House3 == false and KeepCoins == false then
        EggsTiersAutobuy.House3 = true
        task.spawn(function()
            Buy3EggX1()
        end)
    elseif totalCPS >= 8000 and EggsTiersAutobuy.House2 == false and KeepCoins == false then
        EggsTiersAutobuy.House2 = true
        task.spawn(function()
            Buy4EggX1()
        end)
    elseif totalCPS >= 60 and EggsTiersAutobuy.House1 == false and KeepCoins == false then
        EggsTiersAutobuy.House1 = true
        task.spawn(function()
            Buy5EggX1()
        end)
    else
        EggsTiersAutobuy.House1 = false
        EggsTiersAutobuy.House2 = false
        EggsTiersAutobuy.House3 = false
        EggsTiersAutobuy.House4 = false
        EggsTiersAutobuy.House5 = false
    end
end

local function UnlockHouses()
    if not LocalPlot then
        print("❌ Участок не найден для UnlockHouses")
        return
    end
    
    for i = 1, 5 do
        local args = {
            [1] = LocalPlot:GetId(),
            [2] = 'PurchaseHouse',
            [3] = i,
        }
        Network:WaitForChild('Plots_Invoke'):InvokeServer(unpack(args))
        task.wait(0.5)
    end
end

local function BuyUpgrades()
    if KeepCoins == false then
        for _, upgrade in ipairs(Upgrades) do
            local args = {
                [1] = upgrade
            }
            Network:WaitForChild("EventUpgrades: Purchase"):InvokeServer(unpack(args))
            task.wait(0.5)
        end
    end
end

task.wait(10)

local Coins = GetCurrentCoins()
print(Coins)

local totalCPS = GetTotalPetsIncome()
print(totalCPS)

print(LocalPlot)

task.spawn(function ()
    while true do
        BuyUpgrades()
        task.wait(10)
    end
end)

task.wait(1)

task.spawn(function ()
    while true do
        BuyEggsConstantlyToggle()
        task.wait(15)
    end
end)

task.wait(1)

task.spawn(function ()
    while true do
        local args = {
                [1] = LocalPlot:GetId(),
                [2] = 'PurchaseEgg',
                [3] = 1,
                [4] = 3,
            }
            Network:WaitForChild('Plots_Invoke'):InvokeServer(unpack(args))
        task.wait()
    end
end)

task.wait(1)

task.spawn(function ()
    local totalCPS = GetTotalPetsIncome()

    if totalCPS >= 7000 then
        while true do
        local args = {
                [1] = LocalPlot:GetId(),
                [2] = 'PurchaseEgg',
                [3] = 2,
                [4] = 3,
            }
            Network:WaitForChild('Plots_Invoke'):InvokeServer(unpack(args))
        task.wait()
    end
    end
end)

task.wait(1)

task.spawn(function ()
    while true do
        local lastHouseNumber = GetLastUnlockedHouseNumber()
        local Coins = GetCurrentCoins()
        local totalCPS = GetTotalPetsIncome()

        if KeepCoins == false then
            if lastHouseNumber == 5 then
                local args = {
                    [1] = LocalPlot:GetId(),
                    [2] = 'PurchaseEgg',
                    [3] = 5,
                    [4] = 1,
                }
                Network:WaitForChild('Plots_Invoke'):InvokeServer(unpack(args))
            elseif lastHouseNumber == 4 then
                local eggCost = 300000
                local buyEggTimer = (eggCost * 2) / totalCPS

                if Coins >= eggCost * 2 then
                    task.wait(buyEggTimer)
                    local args = {
                        [1] = LocalPlot:GetId(),
                        [2] = 'PurchaseEgg',
                        [3] = 4,
                        [4] = 1,
                    }
                    Network:WaitForChild('Plots_Invoke'):InvokeServer(unpack(args))
                end
            elseif lastHouseNumber == 3 then
                local eggCost = 50000
                local buyEggTimer = (eggCost * 1.1) / totalCPS

                if Coins >= eggCost * 1.1 then
                    task.wait(buyEggTimer)
                    local args = {
                        [1] = LocalPlot:GetId(),
                        [2] = 'PurchaseEgg',
                        [3] = 3,
                        [4] = 1,
                    }
                    Network:WaitForChild('Plots_Invoke'):InvokeServer(unpack(args))
                end
            elseif lastHouseNumber == 2 then
                local eggCost = 5000
                local buyEggTimer = (eggCost * 1.1) / totalCPS

                if Coins >= eggCost * 1.1 then
                    task.wait(buyEggTimer)
                    local args = {
                        [1] = LocalPlot:GetId(),
                        [2] = 'PurchaseEgg',
                        [3] = 2,
                        [4] = 1,
                    }
                    Network:WaitForChild('Plots_Invoke'):InvokeServer(unpack(args))
                end
            end
        end
        task.wait(1) 
    end
end)

task.wait(1)

CollectCoins()

task.wait(1)

task.wait(function ()
    while true do
        UnlockHouses()
        task.wait(5)
    end
end)
